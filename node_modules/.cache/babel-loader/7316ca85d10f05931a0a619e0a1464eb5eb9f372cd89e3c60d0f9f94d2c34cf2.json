{"ast":null,"code":"var _jsxFileName = \"/Users/thomasyeoh/repos/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React from 'react';\nimport './SortingVisualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n  componentDidMount() {\n    this.resetArray();\n  }\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < 200; i++) {\n      array.push(randomIntFromInterval(1, 600));\n    }\n    this.setState({\n      array\n    });\n  }\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-bar\",\n        style: {\n          height: `${value}px`\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInterval","setState","render","className","children","map","value","idx","style","height","fileName","_jsxFileName","lineNumber","columnNumber","min","max","Math","floor","random"],"sources":["/Users/thomasyeoh/repos/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"sourcesContent":["import React from 'react';\nimport './SortingVisualizer.css';\n\nexport default class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n    componentDidMount() {\n        this.resetArray();\n    }\n \n    resetArray() {\n        const array = [];\n        for (let i = 0; i  < 200; i++) {\n            array.push(randomIntFromInterval(1, 600));\n        }\n        this.setState({array});\n    }\n\n    render() {\n        const {array} = this.state;\n\n        return (\n            <div className=\"array-container\">\n                {array.map((value, idx) => (\n                    <div \n                        className=\"array-bar\"\n                        key={idx}\n                        style={{height: `${value}px`}}>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nfunction randomIntFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,MAAMC,iBAAiB,SAASH,KAAK,CAACI,SAAS,CAAC;EAC3DC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE;IACX,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,UAAU,CAAC,CAAC;EACrB;EAEAA,UAAUA,CAAA,EAAG;IACT,MAAMF,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAI,GAAG,EAAEA,CAAC,EAAE,EAAE;MAC3BH,KAAK,CAACI,IAAI,CAACC,qBAAqB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC7C;IACA,IAAI,CAACC,QAAQ,CAAC;MAACN;IAAK,CAAC,CAAC;EAC1B;EAEAO,MAAMA,CAAA,EAAG;IACL,MAAM;MAACP;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAE1B,oBACIL,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3BT,KAAK,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAClBlB,OAAA;QACIc,SAAS,EAAC,WAAW;QAErBK,KAAK,EAAE;UAACC,MAAM,EAAG,GAAEH,KAAM;QAAG;MAAE,GADzBC,GAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;AACJ;AAEA,SAASb,qBAAqBA,CAACc,GAAG,EAAEC,GAAG,EAAE;EACrC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}